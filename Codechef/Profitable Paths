#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define CHECK(x) cout << (#x) << " is " << (x) << endl;
#define int ll
const int MOD = 1e9 + 7;
long long cnt[300005];
int sz[300005], pr[300005];
vector<int> adj[300005];
void dfs(int u,int par = 0){
	pr[u] = par;
	sz[u] = adj[u].size() == 1;
	for(auto &v : adj[u]){
		if(v == par) continue;
		dfs(v , u);
		sz[u] += sz[v];
	}
}
void solve(){
  int n;
  cin >> n;
  for(int i = 1; i <= n; i++) adj[i].clear(), cnt[i] = 0, sz[i] = 0, pr[i] = 0;
  vector<int> a, b;
	for(int i = 1; i <= n; i++){
		int x;
		cin >> x;
		a.push_back(x);
	}
	for(int i = 1; i < n; i++){
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	dfs(1);
	for(int u = 1; u <= n; u++){
		if(adj[u].size() == 1){
			cnt[u] = sz[1] - 1;
			b.push_back(cnt[u]);
			continue;
		}
		long long cur = sz[1] - sz[u];
		for(auto &v : adj[u]){
			if(pr[u] == v) continue;
			cnt[u] += cur * sz[v];
			cur += sz[v];
		}
		b.push_back(cnt[u]);
	}
	sort(a.begin(), a.end());
	sort(b.begin(), b.end());
	int res = 0;
	for(int i = 0; i < b.size(); i++){
		b[i] %= MOD;
		a[i] %= MOD;
		res += a[i] * b[i] % MOD;
		res %= MOD;
	}
	cout << res << '\n';


}
int32_t main(){
  ios::sync_with_stdio(false);cin.tie(0);
  int m = 1;
  cin >> m;
  while(m--) solve();
  return 0;
}
